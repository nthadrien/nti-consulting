---
import { getLangFromUrl } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);

import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import Contacts from "../components/Contacts.astro";
import Header from "../components/Header.astro";
interface Props {
	title: string;
	description: string;
	image?: string;
	link?:string;
}

const { title, description, image, link } = Astro.props;
---

<!doctype html>
<html  lang={lang}>
	<head>
		<meta charset="utf-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<Navbar />
		<Header description={description} image={image} link={link} />
		<slot />
		<Contacts />
		<Footer />
	</body>
	<script src="../scripts/main.js"></script>
</html>

<style is:global>
	:root {
		--pr-clr: blue;
		--sc-clr: darkblue;
		--cm-clr: #a35e5e;;
		--nt-clr: #f8f7f6;
		--max-wd: 980px;

		--fs-h1: 1.6rem;
		--fs-h2: 1.4rem;
		--fs-h3: 1.2rem;
	}

	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
		transition: all 0.32s ease;
	}

	html {
		scroll-behavior: smooth;
	}

	body {
		background: var(--nt-clr);
		color: #333;
		font-family: system-ui, sans-serif;
		line-height: 1.75;
		font-size: 13px;
	}

	main {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}

	a,
	button {
		text-decoration: none;
		text-transform: capitalize;
		cursor: pointer;
		color: inherit;
		font-weight: 300;
		color: inherit;
	}

	a:hover {
		color: var( --cm-clr);
	}

	button:active {
		outline: 3px solid rgba(105, 105, 105, 0.66);
		border-radius: 6px ;
	}

	h1 {
		font-size: var(--fs-h1);
	}

	h2 {
		font-size: var(--fs-h2);
	}

	h3 {
		font-size: var(--fs-h3);
	}

	ul {
		list-style: none;
	}

	input {
		width: 100%;
		height: 36px;
	}

	.btn {
		padding: 0.8em;
		text-align: center;
		border: 1px solid #ddd;
		background: transparent;
		color: white;
	}

	.btn:hover {
		background: linear-gradient( 45deg, var(--pr-clr) 10%, rgba(66, 7, 138, 0.256) 80% );
		color: white;
	}

	.container {
		max-width: var(--max-wd);
		padding: 1rem;
		margin: 2rem auto;
	}

	.content {
		max-width: 800px;
	}

	.content ul {
		padding-left: 1.4rem ;
		list-style: disc;
	}

	.tx-cn {
		text-align: center;
	}

	h2, h3 {
		position: relative;
	}

	h2::after, h3::after {
		content: "";
		background-color: var(--pr-clr);
		height: 3px;
		width: 5%;
		position: absolute;
		top: 100%;
		left: 0px;
	}

	h3::after {
		background: #8f4141;
		width: 12%;
		top: 100%;
	}

	.aft::after {
		left: calc(50% - 2.5%);
	}

	.dark {
		background: #333;
		color: var(--nt-clr);
	}

	/* This is the section of intersection observers */
	.fade-in {
		opacity: 0 ;
		transition: all 1.2s ease-in;
	}

	.slider {
		overflow: hidden;
	}

	.slide-top {
		transform: translateY( 120px);
		opacity: 0;
		transition: all 1s ease;
	}

	.slide-left {
		transform: translateX(-50%);
		transition: all 0.9s linear;
	}

	.slide-right {
		transform: translateX(50%);
		transition: all 0.9s linear;
	}

	.fade-in.appear {
		opacity: 1;
	}

	.slide-top.appear,
	.slide-left.appear, .slide-right.appear {
		transform: translate(0);
		opacity: 1;
	}

	.cbtn {
		background: transparent;
		color: inherit;
	}
</style>
